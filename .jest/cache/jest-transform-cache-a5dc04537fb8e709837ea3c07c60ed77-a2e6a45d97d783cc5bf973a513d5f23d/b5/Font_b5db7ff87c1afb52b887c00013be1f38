Object.defineProperty(exports,"__esModule",{value:true});exports.














processFontFamily=processFontFamily;exports.


































isLoaded=isLoaded;exports.



isLoading=isLoading;exports.



loadAsync=loadAsync;exports.



























































style=style;var _reactNative=require('react-native');var _Asset=require('./Asset');var _Asset2=_interopRequireDefault(_Asset);var _Constants=require('./Constants');var _Constants2=_interopRequireDefault(_Constants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var regeneratorRuntime=require('regenerator-runtime');function nativeName(name){return _Constants2.default.sessionId+'-'+name;}var loaded={};var loading={};var onLoadPromises={};function processFontFamily(name){if(!name||_Constants2.default.systemFonts.includes(name)||name==='System'){return name;}if(name.includes(_Constants2.default.sessionId)){return name;}if(!isLoaded(name)){if(__DEV__){if(isLoading(name)){console.error('You started loading \''+name+'\', but used it before it finished loading\n\n'+'- You need to wait for Expo.Font.loadAsync to complete before using the font.\n\n'+'- We recommend loading all fonts before rendering the app, and rendering only '+'Expo.AppLoading while waiting for loading to complete.');}else{console.error('fontFamily \''+name+'\' is not a system font and has not been loaded through '+'Expo.Font.loadAsync.\n\n'+'- If you intended to use a system font, make sure you typed the name '+'correctly and that it is supported by your device operating system.\n\n'+'- If this is a custom font, be sure to load it with Expo.Font.loadAsync.');}}return'System';}return'ExponentFont-'+nativeName(name);}function isLoaded(name){return!!loaded[name];}function isLoading(name){return!!onLoadPromises[name];}function loadAsync(nameOrMapOrArray,uriOrModuleOrAsset){var fontObjs,names,name,asset;return regeneratorRuntime.async(function loadAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(typeof nameOrMapOrArray==='object')){_context.next=11;break;}if(!Array.isArray(nameOrMapOrArray)){_context.next=7;break;}fontObjs=nameOrMapOrArray;_context.next=5;return regeneratorRuntime.awrap(Promise.all(fontObjs.map(function(fontObj){return loadAsync(fontObj);})));case 5:_context.next=10;break;case 7:names=Object.keys(nameOrMapOrArray);_context.next=10;return regeneratorRuntime.awrap(Promise.all(names.map(function(name){return loadAsync(name,nameOrMapOrArray[name]);})));case 10:return _context.abrupt('return');case 11:name=nameOrMapOrArray;if(!loaded[name]){_context.next=15;break;}_context.next=39;break;case 15:if(!loading[name]){_context.next=20;break;}_context.next=18;return regeneratorRuntime.awrap(new Promise(function(resolve){onLoadPromises[name].push(resolve);}));case 18:_context.next=39;break;case 20:loading[name]=true;onLoadPromises[name]=[];asset=void 0;if(!(typeof uriOrModuleOrAsset==='string')){_context.next=27;break;}throw new Error('Loading fonts from remote URIs is temporarily not supported. Please download the font file and load it using require. See: https://docs.getexponent.com/versions/v8.0.0/guides/using-custom-fonts.html#downloading-the-font');case 27:if(typeof uriOrModuleOrAsset==='number'){asset=_Asset2.default.fromModule(uriOrModuleOrAsset);}else{asset=uriOrModuleOrAsset;}case 28:_context.next=30;return regeneratorRuntime.awrap(asset.downloadAsync());case 30:if(!asset.downloaded){_context.next=35;break;}_context.next=33;return regeneratorRuntime.awrap(_reactNative.NativeModules.ExponentFontLoader.loadAsync(nativeName(name),asset.localUri));case 33:_context.next=36;break;case 35:throw new Error('Couldn\'t download asset for font \''+name+'\'');case 36:loaded[name]=true;delete loading[name];if(onLoadPromises[name]){onLoadPromises[name].forEach(function(resolve){return resolve();});delete onLoadPromises[name];}case 39:case'end':return _context.stop();}}},null,this);}function style(
name)

{var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{ignoreWarning:false};
if(!name){
return{
fontFamily:undefined};

}

if(!loaded[name]&&!options.ignoreWarning){
console.warn('[Expo.Font] No font \''+name+'\', or it hasn\'t been loaded yet');
}
return{
fontFamily:'ExponentFont-'+nativeName(name)};

}